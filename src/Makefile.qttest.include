# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

bin_PROGRAMS += qt/test/test_bitcoin-qt
TESTS += qt/test/test_bitcoin-qt

TEST_QT_MOC_CPP = \
  qt/test/moc_compattests.cpp \
  qt/test/moc_rpcnestedtests.cpp \
  qt/test/moc_uritests.cpp

if ENABLE_WALLET
TEST_QT_MOC_CPP += qt/test/moc_paymentservertests.cpp
endif

TEST_QT_H = \
  qt/test/compattests.h \
  qt/test/rpcnestedtests.h \
  qt/test/uritests.h \
  qt/test/paymentrequestdata.h \
  qt/test/paymentservertests.h

qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES)  \
  $(QT_INCLUDES)  $(QT_DBUS_INCLUDES)  $(QT_TEST_INCLUDES) $(LIBBLSSIG_INCLUDES) $(PROTOBUF_CFLAGS)  $(QR_CFLAGS)

qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS) 

# $(LIBBLSSIG_INCLUDES) $(QT_TEST_INCLUDES)

qt_test_test_bitcoin_qt_SOURCES = \
  qt/test/compattests.cpp \
  qt/test/rpcnestedtests.cpp \
  qt/test/test_main.cpp \
  qt/test/uritests.cpp \
  $(TEST_QT_H)
if ENABLE_WALLET
qt_test_test_bitcoin_qt_SOURCES += \
  qt/test/paymentservertests.cpp
endif

nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)

qt_test_test_bitcoin_qt_LDADD = qt/libtecracoinqt.a  $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)
if ENABLE_WALLET
qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)
endif
if ENABLE_ZMQ
qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
endif


qt_test_test_bitcoin_qt_LDADD += tor/src/core/libtor-app.a \
    tor/src/lib/libtor-meminfo.a \
    tor/src/lib/libtor-term.a \
    tor/src/lib/libtor-osinfo.a \
    tor/src/lib/libtor-geoip.a \
    tor/src/lib/libtor-math.a \
    tor/src/lib/libtor-tls.a \
    tor/src/lib/libtor-process.a \
    tor/src/lib/libtor-evloop.a \
    tor/src/lib/libtor-thread.a \
    tor/src/lib/libtor-compress.a \
    @LIBZSTD@ \
    tor/src/lib/libtor-net.a \
    tor/src/lib/libtor-buf.a \
    tor/src/lib/libtor-time.a \
    tor/src/lib/libtor-err.a \
    tor/src/lib/libtor-log.a \
    tor/src/lib/libtor-version.a \
    tor/src/lib/libtor-pubsub.a \
    tor/src/lib/libtor-dispatch.a \
    tor/src/lib/libtor-confmgt.a \
    tor/src/lib/libtor-container.a \
    tor/src/lib/libtor-crypt-ops.a \
    tor/src/lib/libtor-fs.a \
    tor/src/lib/libtor-fdio.a \
    tor/src/lib/libtor-sandbox.a \
    tor/src/lib/libtor-memarea.a \
    tor/src/lib/libtor-intmath.a \
    tor/src/lib/libtor-encoding.a \
    tor/src/lib/libtor-smartlist-core.a \
    tor/src/lib/libtor-lock.a \
    tor/src/lib/libtor-wallclock.a \
    tor/src/lib/libtor-string.a \
    tor/src/lib/libtor-malloc.a \
	tor/src/lib/libtor-ctime.a \
	tor/src/trunnel/libor-trunnel.a \
	tor/src/lib/libcurve25519_donna.a \
	tor/src/ext/ed25519/donna/libed25519_donna.a \
	tor/src/ext/ed25519/ref10/libed25519_ref10.a \
	tor/src/ext/keccak-tiny/libkeccak-tiny.a


#qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) \
#  $(LIBBITCOIN_UTIL)  $(LIBZEROCOIN) $(LIBBITCOIN_CONSENSUS) \
#  $(LIBBITCOIN_CRYPTO) $(LIBZCOIN_SIGMA) $(LIBUNIVALUE) $(LIBLEVELDB) \
#  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \
#  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) \
#  $(MINIUPNPC_LIBS) $(LIBSECP256K1) $(LIBBLSSIG_LIBS) $(LIBBLSSIG_DEPENDS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) 

qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
  $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBZCOIN_SIGMA) \
  $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) $(BOOST_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \
  $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) \
  $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) $(LIBBLSSIG_LIBS) $(LIBBLSSIG_DEPENDS) \
  $(ZLIB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)



EXTRA_qt_test_test_bitcoin_qt_DEPENDENCIES = $(LIBBLSSIG_LIBS)

qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno

CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)

test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)

test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE
	$(MAKE) check-TESTS TESTS=$^

test_bitcoin_qt_clean: FORCE
	rm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)
